#!/bin/bash
# check_market.sh - Get info and links for any Delphi prediction market
# Usage: ./check_market.sh [MARKET_ID]
#        If no MARKET_ID provided, uses environment variable MARKET_ID

set -e

# Configuration - Update these for different networks
NETWORK="Base Sepolia"
CHAIN_ID="84532"
CPMM_ADDRESS="0x840Ab73b0950959d9b12c890B228EA30E7cbb653"
OUTCOME_TOKEN_ADDRESS="0x71F863f93bccb2db3D1F01FC2480e5066150DB0e"
ORACLE_ROUTER_ADDRESS="0xD17a88AAecCB84D0072B6227973Ac43C20f9De03"
BASESCAN_URL="https://sepolia.basescan.org"
CHAINLINK_AUTOMATION_URL="https://automation.chain.link"

# Get market ID from argument or environment
if [ -n "$1" ]; then
    MARKET_ID="$1"
elif [ -n "$MARKET_ID" ]; then
    MARKET_ID="$MARKET_ID"
else
    echo ""
    echo "‚ùå Error: No market ID provided"
    echo ""
    echo "Usage:"
    echo "  ./check_market.sh <MARKET_ID>"
    echo "  OR"
    echo "  export MARKET_ID=<market_id> && ./check_market.sh"
    echo ""
    echo "Example:"
    echo "  ./check_market.sh 0x1ad47bbfd7825699f4e2337b9243a1a02d6830e3295a78006006dc24ad47af8a"
    echo ""
    exit 1
fi

# Validate market ID format
if [[ ! "$MARKET_ID" =~ ^0x[0-9a-fA-F]{64}$ ]]; then
    echo ""
    echo "‚ùå Error: Invalid market ID format"
    echo ""
    echo "Market ID must be a 32-byte hex string starting with 0x"
    echo "Example: 0x1ad47bbfd7825699f4e2337b9243a1a02d6830e3295a78006006dc24ad47af8a"
    echo ""
    exit 1
fi

echo ""
echo "============================================================"
echo "üîç DELPHI MARKET INFO"
echo "============================================================"
echo ""
echo "üìã Market ID: $MARKET_ID"
echo "üîó Network: $NETWORK (Chain ID: $CHAIN_ID)"
echo "‚è∞ Checked: $(date '+%Y-%m-%d %H:%M:%S')"
echo ""
echo "============================================================"
echo ""
echo "üìä VIEW MARKET DATA"
echo ""
echo "üîç Market Contract (CPMM):"
echo "   $BASESCAN_URL/address/$CPMM_ADDRESS"
echo ""
echo "üìú Market Events (see MarketCreated, Trade, MarketResolved):"
echo "   $BASESCAN_URL/address/$CPMM_ADDRESS#events"
echo ""
echo "üé´ Outcome Tokens (YES/NO positions):"
echo "   $BASESCAN_URL/address/$OUTCOME_TOKEN_ADDRESS"
echo ""
echo "üîÆ Oracle Router (price feeds):"
echo "   $BASESCAN_URL/address/$ORACLE_ROUTER_ADDRESS"
echo ""
echo "============================================================"
echo ""
echo "ü§ñ CHAINLINK AUTOMATION"
echo ""
echo "Monitor automated market resolution:"
echo "   $CHAINLINK_AUTOMATION_URL"
echo ""
echo "============================================================"
echo ""
echo "üõ†Ô∏è  INTERACT WITH MARKET"
echo ""
echo "üí∞ Check Your Holdings:"
echo "   export MARKET_ID=$MARKET_ID"
echo "   forge script script/CheckHoldings.s.sol:CheckHoldings \\"
echo "     --rpc-url \$BASE_SEPOLIA_RPC_URL"
echo ""
echo "üí∏ Redeem Shares (after resolution):"
echo "   export MARKET_ID=$MARKET_ID"
echo "   forge script script/RedeemShares.s.sol:RedeemShares \\"
echo "     --rpc-url \$BASE_SEPOLIA_RPC_URL --broadcast"
echo ""
echo "üìà Trade on Market (if active):"
echo "   export MARKET_ID=$MARKET_ID"
echo "   export BUY_YES=true"
echo "   export BUY_AMOUNT=50000000  # 50 USDC (6 decimals)"
echo "   forge script script/TradeMarket.s.sol:TradeMarket \\"
echo "     --rpc-url \$BASE_SEPOLIA_RPC_URL --broadcast"
echo ""
echo "============================================================"
echo ""
echo "üí° TIPS"
echo ""
echo "‚Ä¢ Find your market's creation transaction on BaseScan to see:"
echo "  - Settlement time"
echo "  - Strike price"
echo "  - Oracle feed address"
echo ""
echo "‚Ä¢ Look for events to understand market status:"
echo "  - MarketCreated: Initial setup"
echo "  - Trade: Trading activity"
echo "  - MarketLocked: Ready for resolution"
echo "  - MarketResolved: Winner determined"
echo ""
echo "‚Ä¢ Market status values:"
echo "  - 0 = ACTIVE (can trade)"
echo "  - 1 = LOCKED (resolving)"
echo "  - 2 = RESOLVED (can redeem)"
echo ""
echo "============================================================"
echo ""
